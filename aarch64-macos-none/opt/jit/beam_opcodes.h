/*
 *  Warning: Do not edit this file.
 *  Auto-generated by 'beam_makeops'.
 */

#ifndef __OPCODES_H__
#define __OPCODES_H__

#define BEAM_FORMAT_NUMBER 0
#define MAX_GENERIC_OPCODE 184
#define NUM_GENERIC_OPS 366
#define NUM_SPECIFIC_OPS 246
#define SCRATCH_X_REG 1023

#if !defined(ARCH_64)
  #error "64-bit architecture assumed, but ARCH_64 not defined"
#endif
#define BEAM_WIDE_MASK 0xFFFFFFFFull
#define BEAM_LOOSE_MASK 0xFFFFull
#define BEAM_TIGHT_MASK 0xFFFFull
#define BEAM_TIGHTEST_MASK 0x3FFull
#define BEAM_WIDE_SHIFT 32
#define BEAM_LOOSE_SHIFT 16
#define BEAM_TIGHT_SHIFT 16
#define BEAM_TIGHTEST_SHIFT 10

/*
 * The following operand types for generic instructions
 * occur in beam files.
 */

#define TAG_u 0
#define TAG_i 1
#define TAG_a 2
#define TAG_x 3
#define TAG_y 4
#define TAG_f 5
#define TAG_h 6
#define TAG_z 7

/*
 * The following operand types are only used in the loader.
 */

#define TAG_n 8
#define TAG_p 9
#define TAG_r 10
#define TAG_v 11
#define TAG_l 12
#define TAG_q 13
#define TAG_o 14

#define BEAM_NUM_TAGS 15

extern const char tag_to_letter[];
extern const Uint op_transform[];

#define op_aligned_label_Lt 0
#define op_allocate_tt 1
#define op_allocate_heap_tIt 2
#define op_apply_t 3
#define op_apply_last_tt 4
#define op_badmatch_s 5
#define op_badrecord_s 6
#define op_bif_and_jssd 7
#define op_bif_bit_size_jsd 8
#define op_bif_byte_size_jsd 9
#define op_bif_element_jssd 10
#define op_bif_hd_sd 11
#define op_bif_is_eq_exact_Ssd 12
#define op_bif_is_ge_ssd 13
#define op_bif_is_lt_ssd 14
#define op_bif_is_map_key_bjssd 15
#define op_bif_is_ne_exact_Ssd 16
#define op_bif_map_get_jssd 17
#define op_bif_map_size_jsd 18
#define op_bif_max_ssd 19
#define op_bif_min_ssd 20
#define op_bif_node_jSd 21
#define op_bif_not_jSd 22
#define op_bif_or_jssd 23
#define op_bif_tl_sd 24
#define op_bif_tuple_size_jSd 25
#define op_bs_get_integer2_fStsttd 26
#define op_bs_get_tail_Sdt 27
#define op_bs_init_writable 28
#define op_bs_set_position_SS 29
#define op_bs_test_tail2_fSW 30
#define op_bs_test_unit_fSt 31
#define op_build_stacktrace 32
#define op_call_bif_W 33
#define op_call_bif_mfa_aaI 34
#define op_call_error_handler 35
#define op_call_light_bif_be 36
#define op_call_nif_WWW 37
#define op_case_end_s 38
#define op_catch_yH 39
#define op_catch_end_y 40
#define op_continue_exit 41
#define op_deallocate_t 42
#define op_empty_func_line 43
#define op_executable_line_II 44
#define op_fconv_sl 45
#define op_fload_ql 46
#define op_fload_Sl 47
#define op_fstore_ld 48
#define op_func_line_I 49
#define op_get_hd_Sd 50
#define op_get_list_Sdd 51
#define op_get_tl_Sd 52
#define op_get_tuple_element_swap_sPdd 53
#define op_get_two_tuple_elements_sPSS 54
#define op_i_apply 55
#define op_i_apply_fun 56
#define op_i_apply_fun_last_t 57
#define op_i_apply_fun_only 58
#define op_i_apply_last_t 59
#define op_i_apply_only 60
#define op_i_band_jIssd 61
#define op_i_bif1_sjbd 62
#define op_i_bif2_ssjbd 63
#define op_i_bif3_sssjbd 64
#define op_i_bnot_jIsd 65
#define op_i_bor_jIssd 66
#define op_i_breakpoint_trampoline 67
#define op_i_bs_create_bin_jItd 68
#define op_i_bs_get_bin_and_tail_SftStdd 69
#define op_i_bs_get_binary2_Sftstd 70
#define op_i_bs_get_binary_all2_Sfttd 71
#define op_i_bs_get_float2_Sftstd 72
#define op_i_bs_get_position_SS 73
#define op_i_bs_get_utf16_Sftd 74
#define op_i_bs_get_utf8_Sfd 75
#define op_i_bs_match_fS 76
#define op_i_bs_match_string_SfWM 77
#define op_i_bs_match_test_heap_fSIt 78
#define op_i_bs_skip_bits2_Ssft 79
#define op_i_bs_skip_utf16_Sft 80
#define op_i_bs_skip_utf8_Sf 81
#define op_i_bs_start_match3_Stjd 82
#define op_i_bs_validate_unicode_retract_jsS 83
#define op_i_bsl_jIssd 84
#define op_i_bsr_jIssd 85
#define op_i_bxor_jIssd 86
#define op_i_call_f 87
#define op_i_call_ext_e 88
#define op_i_call_ext_last_et 89
#define op_i_call_ext_only_e 90
#define op_i_call_fun_t 91
#define op_i_call_fun2_atS 92
#define op_i_call_fun2_FtS 93
#define op_i_call_fun2_last_atSt 94
#define op_i_call_fun2_last_FtSt 95
#define op_i_call_fun_last_tt 96
#define op_i_call_last_ft 97
#define op_i_call_on_load_function 98
#define op_i_call_only_f 99
#define op_i_call_trace_return 100
#define op_i_debug_breakpoint 101
#define op_i_debug_line_IIt 102
#define op_i_div_rem_jIssdd 103
#define op_i_fadd_lll 104
#define op_i_fdiv_lll 105
#define op_i_flush_stubs 106
#define op_i_fmul_lll 107
#define op_i_fnegate_ll 108
#define op_i_fsub_lll 109
#define op_i_func_info_IaaI 110
#define op_i_func_label_L 111
#define op_i_generic_breakpoint 112
#define op_i_get_sd 113
#define op_i_get_hash_cWd 114
#define op_i_get_map_element_fSSS 115
#define op_i_get_map_element_hash_fScWS 116
#define op_i_get_map_elements_fsI 117
#define op_i_get_tuple_element_sPS 118
#define op_i_hibernate 119
#define op_i_int_div_jIssd 120
#define op_i_is_tagged_tuple_fsAa 121
#define op_i_is_tagged_tuple_ff_ffsAa 122
#define op_i_is_tuple_fs 123
#define op_i_is_tuple_of_arity_fsA 124
#define op_i_is_tuple_of_arity_ff_ffsA 125
#define op_i_jump_on_val_sfWI 126
#define op_i_jump_on_val_snWI 127
#define op_i_lambda_error_t 128
#define op_i_lambda_trampoline_FfWW 129
#define op_i_length_jtd 130
#define op_i_length_setup_jts 131
#define op_i_line_breakpoint_trampoline 132
#define op_i_load_nif 133
#define op_i_loop_rec_f 134
#define op_i_m_div_jIssd 135
#define op_i_make_fun3_FStt 136
#define op_i_minus_jIssd 137
#define op_i_move_sd 138
#define op_i_mul_add_jssssd 139
#define op_i_new_small_map_lit_dtqI 140
#define op_i_nif_padding 141
#define op_i_perf_counter 142
#define op_i_plus_jIssd 143
#define op_i_rem_jIssd 144
#define op_i_rem_div_jIssdd 145
#define op_i_return_to_trace 146
#define op_i_select_tuple_arity_SfI 147
#define op_i_select_val_bins_sfI 148
#define op_i_select_val_bins_snI 149
#define op_i_select_val_lins_sfI 150
#define op_i_select_val_lins_snI 151
#define op_i_test_arity_fsA 152
#define op_i_test_yield 153
#define op_i_unary_minus_jIsd 154
#define op_i_validate_t 155
#define op_i_yield 156
#define op_if_end 157
#define op_init_yregs_I 158
#define op_int_code_end 159
#define op_is_atom_fs 160
#define op_is_binary_fs 161
#define op_is_bitstring_fs 162
#define op_is_boolean_fs 163
#define op_is_eq_fss 164
#define op_is_eq_exact_fss 165
#define op_is_float_fs 166
#define op_is_function_fS 167
#define op_is_function2_fss 168
#define op_is_ge_fss 169
#define op_is_ge_ge_ffScc 170
#define op_is_ge_lt_ffScc 171
#define op_is_in_range_ffScc 172
#define op_is_int_ge_fSc 173
#define op_is_int_in_range_fScc 174
#define op_is_integer_fs 175
#define op_is_list_fs 176
#define op_is_lt_fss 177
#define op_is_map_fs 178
#define op_is_ne_fss 179
#define op_is_ne_exact_fss 180
#define op_is_nil_fS 181
#define op_is_nonempty_list_fS 182
#define op_is_number_fs 183
#define op_is_pid_fs 184
#define op_is_port_fs 185
#define op_is_reference_fs 186
#define op_jump_f 187
#define op_label_L 188
#define op_line_I 189
#define op_load_tuple_ptr_s 190
#define op_load_two_xregs_dxdx 191
#define op_loop_rec_end_f 192
#define op_mark_unreachable 193
#define op_move_call_ext_last_ydet 194
#define op_move_call_last_ydft 195
#define op_move_deallocate_return 196
#define op_move_trim_sdt 197
#define op_move_two_trim_ydydt 198
#define op_new_map_dtI 199
#define op_nif_start 200
#define op_node_d 201
#define op_nofail_bif1_sbd 202
#define op_nofail_bif2_ssbd 203
#define op_normal_exit 204
#define op_on_load 205
#define op_put_list_ssd 206
#define op_put_list2_sssd 207
#define op_put_list_deallocate_ssdt 208
#define op_put_tuple2_SA 209
#define op_raise_ss 210
#define op_raw_raise 211
#define op_recv_marker_bind_SS 212
#define op_recv_marker_clear_S 213
#define op_recv_marker_reserve_S 214
#define op_recv_marker_use_S 215
#define op_remove_message 216
#define op_return 217
#define op_return_trace 218
#define op_self_d 219
#define op_send 220
#define op_set_tuple_element_sSP 221
#define op_store_two_values_sdsd 222
#define op_swap_dd 223
#define op_swap2_ddd 224
#define op_swap3_dddd 225
#define op_swap4_ddddd 226
#define op_system_limit_body 227
#define op_test_heap_It 228
#define op_timeout 229
#define op_timeout_locked 230
#define op_trace_jump_W 231
#define op_trim_tt 232
#define op_try_case_y 233
#define op_try_case_end_s 234
#define op_try_end_y 235
#define op_try_end_deallocate_t 236
#define op_try_end_move_deallocate_sdt 237
#define op_update_map_assoc_sdtI 238
#define op_update_map_exact_sjdtI 239
#define op_update_record_aIsdI 240
#define op_update_record_in_place_IsdI 241
#define op_wait_locked_f 242
#define op_wait_timeout_locked_sf 243
#define op_wait_timeout_unlocked_sf 244
#define op_wait_unlocked_f 245

#define NUMBER_OF_OPCODES 246
#define op_count_aligned_label_Lt 246
#define op_count_allocate_tt 247
#define op_count_allocate_heap_tIt 248
#define op_count_apply_t 249
#define op_count_apply_last_tt 250
#define op_count_badmatch_s 251
#define op_count_badrecord_s 252
#define op_count_bif_and_jssd 253
#define op_count_bif_bit_size_jsd 254
#define op_count_bif_byte_size_jsd 255
#define op_count_bif_element_jssd 256
#define op_count_bif_hd_sd 257
#define op_count_bif_is_eq_exact_Ssd 258
#define op_count_bif_is_ge_ssd 259
#define op_count_bif_is_lt_ssd 260
#define op_count_bif_is_map_key_bjssd 261
#define op_count_bif_is_ne_exact_Ssd 262
#define op_count_bif_map_get_jssd 263
#define op_count_bif_map_size_jsd 264
#define op_count_bif_max_ssd 265
#define op_count_bif_min_ssd 266
#define op_count_bif_node_jSd 267
#define op_count_bif_not_jSd 268
#define op_count_bif_or_jssd 269
#define op_count_bif_tl_sd 270
#define op_count_bif_tuple_size_jSd 271
#define op_count_bs_get_integer2_fStsttd 272
#define op_count_bs_get_tail_Sdt 273
#define op_count_bs_init_writable 274
#define op_count_bs_set_position_SS 275
#define op_count_bs_test_tail2_fSW 276
#define op_count_bs_test_unit_fSt 277
#define op_count_build_stacktrace 278
#define op_count_call_bif_W 279
#define op_count_call_bif_mfa_aaI 280
#define op_count_call_error_handler 281
#define op_count_call_light_bif_be 282
#define op_count_call_nif_WWW 283
#define op_count_case_end_s 284
#define op_count_catch_yH 285
#define op_count_catch_end_y 286
#define op_count_continue_exit 287
#define op_count_deallocate_t 288
#define op_count_empty_func_line 289
#define op_count_executable_line_II 290
#define op_count_fconv_sl 291
#define op_count_fload_ql 292
#define op_count_fload_Sl 293
#define op_count_fstore_ld 294
#define op_count_func_line_I 295
#define op_count_get_hd_Sd 296
#define op_count_get_list_Sdd 297
#define op_count_get_tl_Sd 298
#define op_count_get_tuple_element_swap_sPdd 299
#define op_count_get_two_tuple_elements_sPSS 300
#define op_count_i_apply 301
#define op_count_i_apply_fun 302
#define op_count_i_apply_fun_last_t 303
#define op_count_i_apply_fun_only 304
#define op_count_i_apply_last_t 305
#define op_count_i_apply_only 306
#define op_count_i_band_jIssd 307
#define op_count_i_bif1_sjbd 308
#define op_count_i_bif2_ssjbd 309
#define op_count_i_bif3_sssjbd 310
#define op_count_i_bnot_jIsd 311
#define op_count_i_bor_jIssd 312
#define op_count_i_breakpoint_trampoline 313
#define op_count_i_bs_create_bin_jItd 314
#define op_count_i_bs_get_bin_and_tail_SftStdd 315
#define op_count_i_bs_get_binary2_Sftstd 316
#define op_count_i_bs_get_binary_all2_Sfttd 317
#define op_count_i_bs_get_float2_Sftstd 318
#define op_count_i_bs_get_position_SS 319
#define op_count_i_bs_get_utf16_Sftd 320
#define op_count_i_bs_get_utf8_Sfd 321
#define op_count_i_bs_match_fS 322
#define op_count_i_bs_match_string_SfWM 323
#define op_count_i_bs_match_test_heap_fSIt 324
#define op_count_i_bs_skip_bits2_Ssft 325
#define op_count_i_bs_skip_utf16_Sft 326
#define op_count_i_bs_skip_utf8_Sf 327
#define op_count_i_bs_start_match3_Stjd 328
#define op_count_i_bs_validate_unicode_retract_jsS 329
#define op_count_i_bsl_jIssd 330
#define op_count_i_bsr_jIssd 331
#define op_count_i_bxor_jIssd 332
#define op_count_i_call_f 333
#define op_count_i_call_ext_e 334
#define op_count_i_call_ext_last_et 335
#define op_count_i_call_ext_only_e 336
#define op_count_i_call_fun_t 337
#define op_count_i_call_fun2_atS 338
#define op_count_i_call_fun2_FtS 339
#define op_count_i_call_fun2_last_atSt 340
#define op_count_i_call_fun2_last_FtSt 341
#define op_count_i_call_fun_last_tt 342
#define op_count_i_call_last_ft 343
#define op_count_i_call_on_load_function 344
#define op_count_i_call_only_f 345
#define op_count_i_call_trace_return 346
#define op_count_i_debug_breakpoint 347
#define op_count_i_debug_line_IIt 348
#define op_count_i_div_rem_jIssdd 349
#define op_count_i_fadd_lll 350
#define op_count_i_fdiv_lll 351
#define op_count_i_flush_stubs 352
#define op_count_i_fmul_lll 353
#define op_count_i_fnegate_ll 354
#define op_count_i_fsub_lll 355
#define op_count_i_func_info_IaaI 356
#define op_count_i_func_label_L 357
#define op_count_i_generic_breakpoint 358
#define op_count_i_get_sd 359
#define op_count_i_get_hash_cWd 360
#define op_count_i_get_map_element_fSSS 361
#define op_count_i_get_map_element_hash_fScWS 362
#define op_count_i_get_map_elements_fsI 363
#define op_count_i_get_tuple_element_sPS 364
#define op_count_i_hibernate 365
#define op_count_i_int_div_jIssd 366
#define op_count_i_is_tagged_tuple_fsAa 367
#define op_count_i_is_tagged_tuple_ff_ffsAa 368
#define op_count_i_is_tuple_fs 369
#define op_count_i_is_tuple_of_arity_fsA 370
#define op_count_i_is_tuple_of_arity_ff_ffsA 371
#define op_count_i_jump_on_val_sfWI 372
#define op_count_i_jump_on_val_snWI 373
#define op_count_i_lambda_error_t 374
#define op_count_i_lambda_trampoline_FfWW 375
#define op_count_i_length_jtd 376
#define op_count_i_length_setup_jts 377
#define op_count_i_line_breakpoint_trampoline 378
#define op_count_i_load_nif 379
#define op_count_i_loop_rec_f 380
#define op_count_i_m_div_jIssd 381
#define op_count_i_make_fun3_FStt 382
#define op_count_i_minus_jIssd 383
#define op_count_i_move_sd 384
#define op_count_i_mul_add_jssssd 385
#define op_count_i_new_small_map_lit_dtqI 386
#define op_count_i_nif_padding 387
#define op_count_i_perf_counter 388
#define op_count_i_plus_jIssd 389
#define op_count_i_rem_jIssd 390
#define op_count_i_rem_div_jIssdd 391
#define op_count_i_return_to_trace 392
#define op_count_i_select_tuple_arity_SfI 393
#define op_count_i_select_val_bins_sfI 394
#define op_count_i_select_val_bins_snI 395
#define op_count_i_select_val_lins_sfI 396
#define op_count_i_select_val_lins_snI 397
#define op_count_i_test_arity_fsA 398
#define op_count_i_test_yield 399
#define op_count_i_unary_minus_jIsd 400
#define op_count_i_validate_t 401
#define op_count_i_yield 402
#define op_count_if_end 403
#define op_count_init_yregs_I 404
#define op_count_int_code_end 405
#define op_count_is_atom_fs 406
#define op_count_is_binary_fs 407
#define op_count_is_bitstring_fs 408
#define op_count_is_boolean_fs 409
#define op_count_is_eq_fss 410
#define op_count_is_eq_exact_fss 411
#define op_count_is_float_fs 412
#define op_count_is_function_fS 413
#define op_count_is_function2_fss 414
#define op_count_is_ge_fss 415
#define op_count_is_ge_ge_ffScc 416
#define op_count_is_ge_lt_ffScc 417
#define op_count_is_in_range_ffScc 418
#define op_count_is_int_ge_fSc 419
#define op_count_is_int_in_range_fScc 420
#define op_count_is_integer_fs 421
#define op_count_is_list_fs 422
#define op_count_is_lt_fss 423
#define op_count_is_map_fs 424
#define op_count_is_ne_fss 425
#define op_count_is_ne_exact_fss 426
#define op_count_is_nil_fS 427
#define op_count_is_nonempty_list_fS 428
#define op_count_is_number_fs 429
#define op_count_is_pid_fs 430
#define op_count_is_port_fs 431
#define op_count_is_reference_fs 432
#define op_count_jump_f 433
#define op_count_label_L 434
#define op_count_line_I 435
#define op_count_load_tuple_ptr_s 436
#define op_count_load_two_xregs_dxdx 437
#define op_count_loop_rec_end_f 438
#define op_count_mark_unreachable 439
#define op_count_move_call_ext_last_ydet 440
#define op_count_move_call_last_ydft 441
#define op_count_move_deallocate_return 442
#define op_count_move_trim_sdt 443
#define op_count_move_two_trim_ydydt 444
#define op_count_new_map_dtI 445
#define op_count_nif_start 446
#define op_count_node_d 447
#define op_count_nofail_bif1_sbd 448
#define op_count_nofail_bif2_ssbd 449
#define op_count_normal_exit 450
#define op_count_on_load 451
#define op_count_put_list_ssd 452
#define op_count_put_list2_sssd 453
#define op_count_put_list_deallocate_ssdt 454
#define op_count_put_tuple2_SA 455
#define op_count_raise_ss 456
#define op_count_raw_raise 457
#define op_count_recv_marker_bind_SS 458
#define op_count_recv_marker_clear_S 459
#define op_count_recv_marker_reserve_S 460
#define op_count_recv_marker_use_S 461
#define op_count_remove_message 462
#define op_count_return 463
#define op_count_return_trace 464
#define op_count_self_d 465
#define op_count_send 466
#define op_count_set_tuple_element_sSP 467
#define op_count_store_two_values_sdsd 468
#define op_count_swap_dd 469
#define op_count_swap2_ddd 470
#define op_count_swap3_dddd 471
#define op_count_swap4_ddddd 472
#define op_count_system_limit_body 473
#define op_count_test_heap_It 474
#define op_count_timeout 475
#define op_count_timeout_locked 476
#define op_count_trace_jump_W 477
#define op_count_trim_tt 478
#define op_count_try_case_y 479
#define op_count_try_case_end_s 480
#define op_count_try_end_y 481
#define op_count_try_end_deallocate_t 482
#define op_count_try_end_move_deallocate_sdt 483
#define op_count_update_map_assoc_sdtI 484
#define op_count_update_map_exact_sjdtI 485
#define op_count_update_record_aIsdI 486
#define op_count_update_record_in_place_IsdI 487
#define op_count_wait_locked_f 488
#define op_count_wait_timeout_locked_sf 489
#define op_count_wait_timeout_unlocked_sf 490
#define op_count_wait_unlocked_f 491

#define DEFINE_OPCODES \
&&lb_aligned_label_Lt, \
&&lb_allocate_tt, \
&&lb_allocate_heap_tIt, \
&&lb_apply_t, \
&&lb_apply_last_tt, \
&&lb_badmatch_s, \
&&lb_badrecord_s, \
&&lb_bif_and_jssd, \
&&lb_bif_bit_size_jsd, \
&&lb_bif_byte_size_jsd, \
&&lb_bif_element_jssd, \
&&lb_bif_hd_sd, \
&&lb_bif_is_eq_exact_Ssd, \
&&lb_bif_is_ge_ssd, \
&&lb_bif_is_lt_ssd, \
&&lb_bif_is_map_key_bjssd, \
&&lb_bif_is_ne_exact_Ssd, \
&&lb_bif_map_get_jssd, \
&&lb_bif_map_size_jsd, \
&&lb_bif_max_ssd, \
&&lb_bif_min_ssd, \
&&lb_bif_node_jSd, \
&&lb_bif_not_jSd, \
&&lb_bif_or_jssd, \
&&lb_bif_tl_sd, \
&&lb_bif_tuple_size_jSd, \
&&lb_bs_get_integer2_fStsttd, \
&&lb_bs_get_tail_Sdt, \
&&lb_bs_init_writable, \
&&lb_bs_set_position_SS, \
&&lb_bs_test_tail2_fSW, \
&&lb_bs_test_unit_fSt, \
&&lb_build_stacktrace, \
&&lb_call_bif_W, \
&&lb_call_bif_mfa_aaI, \
&&lb_call_error_handler, \
&&lb_call_light_bif_be, \
&&lb_call_nif_WWW, \
&&lb_case_end_s, \
&&lb_catch_yH, \
&&lb_catch_end_y, \
&&lb_continue_exit, \
&&lb_deallocate_t, \
&&lb_empty_func_line, \
&&lb_executable_line_II, \
&&lb_fconv_sl, \
&&lb_fload_ql, \
&&lb_fload_Sl, \
&&lb_fstore_ld, \
&&lb_func_line_I, \
&&lb_get_hd_Sd, \
&&lb_get_list_Sdd, \
&&lb_get_tl_Sd, \
&&lb_get_tuple_element_swap_sPdd, \
&&lb_get_two_tuple_elements_sPSS, \
&&lb_i_apply, \
&&lb_i_apply_fun, \
&&lb_i_apply_fun_last_t, \
&&lb_i_apply_fun_only, \
&&lb_i_apply_last_t, \
&&lb_i_apply_only, \
&&lb_i_band_jIssd, \
&&lb_i_bif1_sjbd, \
&&lb_i_bif2_ssjbd, \
&&lb_i_bif3_sssjbd, \
&&lb_i_bnot_jIsd, \
&&lb_i_bor_jIssd, \
&&lb_i_breakpoint_trampoline, \
&&lb_i_bs_create_bin_jItd, \
&&lb_i_bs_get_bin_and_tail_SftStdd, \
&&lb_i_bs_get_binary2_Sftstd, \
&&lb_i_bs_get_binary_all2_Sfttd, \
&&lb_i_bs_get_float2_Sftstd, \
&&lb_i_bs_get_position_SS, \
&&lb_i_bs_get_utf16_Sftd, \
&&lb_i_bs_get_utf8_Sfd, \
&&lb_i_bs_match_fS, \
&&lb_i_bs_match_string_SfWM, \
&&lb_i_bs_match_test_heap_fSIt, \
&&lb_i_bs_skip_bits2_Ssft, \
&&lb_i_bs_skip_utf16_Sft, \
&&lb_i_bs_skip_utf8_Sf, \
&&lb_i_bs_start_match3_Stjd, \
&&lb_i_bs_validate_unicode_retract_jsS, \
&&lb_i_bsl_jIssd, \
&&lb_i_bsr_jIssd, \
&&lb_i_bxor_jIssd, \
&&lb_i_call_f, \
&&lb_i_call_ext_e, \
&&lb_i_call_ext_last_et, \
&&lb_i_call_ext_only_e, \
&&lb_i_call_fun_t, \
&&lb_i_call_fun2_atS, \
&&lb_i_call_fun2_FtS, \
&&lb_i_call_fun2_last_atSt, \
&&lb_i_call_fun2_last_FtSt, \
&&lb_i_call_fun_last_tt, \
&&lb_i_call_last_ft, \
&&lb_i_call_on_load_function, \
&&lb_i_call_only_f, \
&&lb_i_call_trace_return, \
&&lb_i_debug_breakpoint, \
&&lb_i_debug_line_IIt, \
&&lb_i_div_rem_jIssdd, \
&&lb_i_fadd_lll, \
&&lb_i_fdiv_lll, \
&&lb_i_flush_stubs, \
&&lb_i_fmul_lll, \
&&lb_i_fnegate_ll, \
&&lb_i_fsub_lll, \
&&lb_i_func_info_IaaI, \
&&lb_i_func_label_L, \
&&lb_i_generic_breakpoint, \
&&lb_i_get_sd, \
&&lb_i_get_hash_cWd, \
&&lb_i_get_map_element_fSSS, \
&&lb_i_get_map_element_hash_fScWS, \
&&lb_i_get_map_elements_fsI, \
&&lb_i_get_tuple_element_sPS, \
&&lb_i_hibernate, \
&&lb_i_int_div_jIssd, \
&&lb_i_is_tagged_tuple_fsAa, \
&&lb_i_is_tagged_tuple_ff_ffsAa, \
&&lb_i_is_tuple_fs, \
&&lb_i_is_tuple_of_arity_fsA, \
&&lb_i_is_tuple_of_arity_ff_ffsA, \
&&lb_i_jump_on_val_sfWI, \
&&lb_i_jump_on_val_snWI, \
&&lb_i_lambda_error_t, \
&&lb_i_lambda_trampoline_FfWW, \
&&lb_i_length_jtd, \
&&lb_i_length_setup_jts, \
&&lb_i_line_breakpoint_trampoline, \
&&lb_i_load_nif, \
&&lb_i_loop_rec_f, \
&&lb_i_m_div_jIssd, \
&&lb_i_make_fun3_FStt, \
&&lb_i_minus_jIssd, \
&&lb_i_move_sd, \
&&lb_i_mul_add_jssssd, \
&&lb_i_new_small_map_lit_dtqI, \
&&lb_i_nif_padding, \
&&lb_i_perf_counter, \
&&lb_i_plus_jIssd, \
&&lb_i_rem_jIssd, \
&&lb_i_rem_div_jIssdd, \
&&lb_i_return_to_trace, \
&&lb_i_select_tuple_arity_SfI, \
&&lb_i_select_val_bins_sfI, \
&&lb_i_select_val_bins_snI, \
&&lb_i_select_val_lins_sfI, \
&&lb_i_select_val_lins_snI, \
&&lb_i_test_arity_fsA, \
&&lb_i_test_yield, \
&&lb_i_unary_minus_jIsd, \
&&lb_i_validate_t, \
&&lb_i_yield, \
&&lb_if_end, \
&&lb_init_yregs_I, \
&&lb_int_code_end, \
&&lb_is_atom_fs, \
&&lb_is_binary_fs, \
&&lb_is_bitstring_fs, \
&&lb_is_boolean_fs, \
&&lb_is_eq_fss, \
&&lb_is_eq_exact_fss, \
&&lb_is_float_fs, \
&&lb_is_function_fS, \
&&lb_is_function2_fss, \
&&lb_is_ge_fss, \
&&lb_is_ge_ge_ffScc, \
&&lb_is_ge_lt_ffScc, \
&&lb_is_in_range_ffScc, \
&&lb_is_int_ge_fSc, \
&&lb_is_int_in_range_fScc, \
&&lb_is_integer_fs, \
&&lb_is_list_fs, \
&&lb_is_lt_fss, \
&&lb_is_map_fs, \
&&lb_is_ne_fss, \
&&lb_is_ne_exact_fss, \
&&lb_is_nil_fS, \
&&lb_is_nonempty_list_fS, \
&&lb_is_number_fs, \
&&lb_is_pid_fs, \
&&lb_is_port_fs, \
&&lb_is_reference_fs, \
&&lb_jump_f, \
&&lb_label_L, \
&&lb_line_I, \
&&lb_load_tuple_ptr_s, \
&&lb_load_two_xregs_dxdx, \
&&lb_loop_rec_end_f, \
&&lb_mark_unreachable, \
&&lb_move_call_ext_last_ydet, \
&&lb_move_call_last_ydft, \
&&lb_move_deallocate_return, \
&&lb_move_trim_sdt, \
&&lb_move_two_trim_ydydt, \
&&lb_new_map_dtI, \
&&lb_nif_start, \
&&lb_node_d, \
&&lb_nofail_bif1_sbd, \
&&lb_nofail_bif2_ssbd, \
&&lb_normal_exit, \
&&lb_on_load, \
&&lb_put_list_ssd, \
&&lb_put_list2_sssd, \
&&lb_put_list_deallocate_ssdt, \
&&lb_put_tuple2_SA, \
&&lb_raise_ss, \
&&lb_raw_raise, \
&&lb_recv_marker_bind_SS, \
&&lb_recv_marker_clear_S, \
&&lb_recv_marker_reserve_S, \
&&lb_recv_marker_use_S, \
&&lb_remove_message, \
&&lb_return, \
&&lb_return_trace, \
&&lb_self_d, \
&&lb_send, \
&&lb_set_tuple_element_sSP, \
&&lb_store_two_values_sdsd, \
&&lb_swap_dd, \
&&lb_swap2_ddd, \
&&lb_swap3_dddd, \
&&lb_swap4_ddddd, \
&&lb_system_limit_body, \
&&lb_test_heap_It, \
&&lb_timeout, \
&&lb_timeout_locked, \
&&lb_trace_jump_W, \
&&lb_trim_tt, \
&&lb_try_case_y, \
&&lb_try_case_end_s, \
&&lb_try_end_y, \
&&lb_try_end_deallocate_t, \
&&lb_try_end_move_deallocate_sdt, \
&&lb_update_map_assoc_sdtI, \
&&lb_update_map_exact_sjdtI, \
&&lb_update_record_aIsdI, \
&&lb_update_record_in_place_IsdI, \
&&lb_wait_locked_f, \
&&lb_wait_timeout_locked_sf, \
&&lb_wait_timeout_unlocked_sf, \
&&lb_wait_unlocked_f,

#define DEFINE_COUNTING_OPCODES \
&&lb_count_aligned_label_Lt, \
&&lb_count_allocate_tt, \
&&lb_count_allocate_heap_tIt, \
&&lb_count_apply_t, \
&&lb_count_apply_last_tt, \
&&lb_count_badmatch_s, \
&&lb_count_badrecord_s, \
&&lb_count_bif_and_jssd, \
&&lb_count_bif_bit_size_jsd, \
&&lb_count_bif_byte_size_jsd, \
&&lb_count_bif_element_jssd, \
&&lb_count_bif_hd_sd, \
&&lb_count_bif_is_eq_exact_Ssd, \
&&lb_count_bif_is_ge_ssd, \
&&lb_count_bif_is_lt_ssd, \
&&lb_count_bif_is_map_key_bjssd, \
&&lb_count_bif_is_ne_exact_Ssd, \
&&lb_count_bif_map_get_jssd, \
&&lb_count_bif_map_size_jsd, \
&&lb_count_bif_max_ssd, \
&&lb_count_bif_min_ssd, \
&&lb_count_bif_node_jSd, \
&&lb_count_bif_not_jSd, \
&&lb_count_bif_or_jssd, \
&&lb_count_bif_tl_sd, \
&&lb_count_bif_tuple_size_jSd, \
&&lb_count_bs_get_integer2_fStsttd, \
&&lb_count_bs_get_tail_Sdt, \
&&lb_count_bs_init_writable, \
&&lb_count_bs_set_position_SS, \
&&lb_count_bs_test_tail2_fSW, \
&&lb_count_bs_test_unit_fSt, \
&&lb_count_build_stacktrace, \
&&lb_count_call_bif_W, \
&&lb_count_call_bif_mfa_aaI, \
&&lb_count_call_error_handler, \
&&lb_count_call_light_bif_be, \
&&lb_count_call_nif_WWW, \
&&lb_count_case_end_s, \
&&lb_count_catch_yH, \
&&lb_count_catch_end_y, \
&&lb_count_continue_exit, \
&&lb_count_deallocate_t, \
&&lb_count_empty_func_line, \
&&lb_count_executable_line_II, \
&&lb_count_fconv_sl, \
&&lb_count_fload_ql, \
&&lb_count_fload_Sl, \
&&lb_count_fstore_ld, \
&&lb_count_func_line_I, \
&&lb_count_get_hd_Sd, \
&&lb_count_get_list_Sdd, \
&&lb_count_get_tl_Sd, \
&&lb_count_get_tuple_element_swap_sPdd, \
&&lb_count_get_two_tuple_elements_sPSS, \
&&lb_count_i_apply, \
&&lb_count_i_apply_fun, \
&&lb_count_i_apply_fun_last_t, \
&&lb_count_i_apply_fun_only, \
&&lb_count_i_apply_last_t, \
&&lb_count_i_apply_only, \
&&lb_count_i_band_jIssd, \
&&lb_count_i_bif1_sjbd, \
&&lb_count_i_bif2_ssjbd, \
&&lb_count_i_bif3_sssjbd, \
&&lb_count_i_bnot_jIsd, \
&&lb_count_i_bor_jIssd, \
&&lb_count_i_breakpoint_trampoline, \
&&lb_count_i_bs_create_bin_jItd, \
&&lb_count_i_bs_get_bin_and_tail_SftStdd, \
&&lb_count_i_bs_get_binary2_Sftstd, \
&&lb_count_i_bs_get_binary_all2_Sfttd, \
&&lb_count_i_bs_get_float2_Sftstd, \
&&lb_count_i_bs_get_position_SS, \
&&lb_count_i_bs_get_utf16_Sftd, \
&&lb_count_i_bs_get_utf8_Sfd, \
&&lb_count_i_bs_match_fS, \
&&lb_count_i_bs_match_string_SfWM, \
&&lb_count_i_bs_match_test_heap_fSIt, \
&&lb_count_i_bs_skip_bits2_Ssft, \
&&lb_count_i_bs_skip_utf16_Sft, \
&&lb_count_i_bs_skip_utf8_Sf, \
&&lb_count_i_bs_start_match3_Stjd, \
&&lb_count_i_bs_validate_unicode_retract_jsS, \
&&lb_count_i_bsl_jIssd, \
&&lb_count_i_bsr_jIssd, \
&&lb_count_i_bxor_jIssd, \
&&lb_count_i_call_f, \
&&lb_count_i_call_ext_e, \
&&lb_count_i_call_ext_last_et, \
&&lb_count_i_call_ext_only_e, \
&&lb_count_i_call_fun_t, \
&&lb_count_i_call_fun2_atS, \
&&lb_count_i_call_fun2_FtS, \
&&lb_count_i_call_fun2_last_atSt, \
&&lb_count_i_call_fun2_last_FtSt, \
&&lb_count_i_call_fun_last_tt, \
&&lb_count_i_call_last_ft, \
&&lb_count_i_call_on_load_function, \
&&lb_count_i_call_only_f, \
&&lb_count_i_call_trace_return, \
&&lb_count_i_debug_breakpoint, \
&&lb_count_i_debug_line_IIt, \
&&lb_count_i_div_rem_jIssdd, \
&&lb_count_i_fadd_lll, \
&&lb_count_i_fdiv_lll, \
&&lb_count_i_flush_stubs, \
&&lb_count_i_fmul_lll, \
&&lb_count_i_fnegate_ll, \
&&lb_count_i_fsub_lll, \
&&lb_count_i_func_info_IaaI, \
&&lb_count_i_func_label_L, \
&&lb_count_i_generic_breakpoint, \
&&lb_count_i_get_sd, \
&&lb_count_i_get_hash_cWd, \
&&lb_count_i_get_map_element_fSSS, \
&&lb_count_i_get_map_element_hash_fScWS, \
&&lb_count_i_get_map_elements_fsI, \
&&lb_count_i_get_tuple_element_sPS, \
&&lb_count_i_hibernate, \
&&lb_count_i_int_div_jIssd, \
&&lb_count_i_is_tagged_tuple_fsAa, \
&&lb_count_i_is_tagged_tuple_ff_ffsAa, \
&&lb_count_i_is_tuple_fs, \
&&lb_count_i_is_tuple_of_arity_fsA, \
&&lb_count_i_is_tuple_of_arity_ff_ffsA, \
&&lb_count_i_jump_on_val_sfWI, \
&&lb_count_i_jump_on_val_snWI, \
&&lb_count_i_lambda_error_t, \
&&lb_count_i_lambda_trampoline_FfWW, \
&&lb_count_i_length_jtd, \
&&lb_count_i_length_setup_jts, \
&&lb_count_i_line_breakpoint_trampoline, \
&&lb_count_i_load_nif, \
&&lb_count_i_loop_rec_f, \
&&lb_count_i_m_div_jIssd, \
&&lb_count_i_make_fun3_FStt, \
&&lb_count_i_minus_jIssd, \
&&lb_count_i_move_sd, \
&&lb_count_i_mul_add_jssssd, \
&&lb_count_i_new_small_map_lit_dtqI, \
&&lb_count_i_nif_padding, \
&&lb_count_i_perf_counter, \
&&lb_count_i_plus_jIssd, \
&&lb_count_i_rem_jIssd, \
&&lb_count_i_rem_div_jIssdd, \
&&lb_count_i_return_to_trace, \
&&lb_count_i_select_tuple_arity_SfI, \
&&lb_count_i_select_val_bins_sfI, \
&&lb_count_i_select_val_bins_snI, \
&&lb_count_i_select_val_lins_sfI, \
&&lb_count_i_select_val_lins_snI, \
&&lb_count_i_test_arity_fsA, \
&&lb_count_i_test_yield, \
&&lb_count_i_unary_minus_jIsd, \
&&lb_count_i_validate_t, \
&&lb_count_i_yield, \
&&lb_count_if_end, \
&&lb_count_init_yregs_I, \
&&lb_count_int_code_end, \
&&lb_count_is_atom_fs, \
&&lb_count_is_binary_fs, \
&&lb_count_is_bitstring_fs, \
&&lb_count_is_boolean_fs, \
&&lb_count_is_eq_fss, \
&&lb_count_is_eq_exact_fss, \
&&lb_count_is_float_fs, \
&&lb_count_is_function_fS, \
&&lb_count_is_function2_fss, \
&&lb_count_is_ge_fss, \
&&lb_count_is_ge_ge_ffScc, \
&&lb_count_is_ge_lt_ffScc, \
&&lb_count_is_in_range_ffScc, \
&&lb_count_is_int_ge_fSc, \
&&lb_count_is_int_in_range_fScc, \
&&lb_count_is_integer_fs, \
&&lb_count_is_list_fs, \
&&lb_count_is_lt_fss, \
&&lb_count_is_map_fs, \
&&lb_count_is_ne_fss, \
&&lb_count_is_ne_exact_fss, \
&&lb_count_is_nil_fS, \
&&lb_count_is_nonempty_list_fS, \
&&lb_count_is_number_fs, \
&&lb_count_is_pid_fs, \
&&lb_count_is_port_fs, \
&&lb_count_is_reference_fs, \
&&lb_count_jump_f, \
&&lb_count_label_L, \
&&lb_count_line_I, \
&&lb_count_load_tuple_ptr_s, \
&&lb_count_load_two_xregs_dxdx, \
&&lb_count_loop_rec_end_f, \
&&lb_count_mark_unreachable, \
&&lb_count_move_call_ext_last_ydet, \
&&lb_count_move_call_last_ydft, \
&&lb_count_move_deallocate_return, \
&&lb_count_move_trim_sdt, \
&&lb_count_move_two_trim_ydydt, \
&&lb_count_new_map_dtI, \
&&lb_count_nif_start, \
&&lb_count_node_d, \
&&lb_count_nofail_bif1_sbd, \
&&lb_count_nofail_bif2_ssbd, \
&&lb_count_normal_exit, \
&&lb_count_on_load, \
&&lb_count_put_list_ssd, \
&&lb_count_put_list2_sssd, \
&&lb_count_put_list_deallocate_ssdt, \
&&lb_count_put_tuple2_SA, \
&&lb_count_raise_ss, \
&&lb_count_raw_raise, \
&&lb_count_recv_marker_bind_SS, \
&&lb_count_recv_marker_clear_S, \
&&lb_count_recv_marker_reserve_S, \
&&lb_count_recv_marker_use_S, \
&&lb_count_remove_message, \
&&lb_count_return, \
&&lb_count_return_trace, \
&&lb_count_self_d, \
&&lb_count_send, \
&&lb_count_set_tuple_element_sSP, \
&&lb_count_store_two_values_sdsd, \
&&lb_count_swap_dd, \
&&lb_count_swap2_ddd, \
&&lb_count_swap3_dddd, \
&&lb_count_swap4_ddddd, \
&&lb_count_system_limit_body, \
&&lb_count_test_heap_It, \
&&lb_count_timeout, \
&&lb_count_timeout_locked, \
&&lb_count_trace_jump_W, \
&&lb_count_trim_tt, \
&&lb_count_try_case_y, \
&&lb_count_try_case_end_s, \
&&lb_count_try_end_y, \
&&lb_count_try_end_deallocate_t, \
&&lb_count_try_end_move_deallocate_sdt, \
&&lb_count_update_map_assoc_sdtI, \
&&lb_count_update_map_exact_sjdtI, \
&&lb_count_update_record_aIsdI, \
&&lb_count_update_record_in_place_IsdI, \
&&lb_count_wait_locked_f, \
&&lb_count_wait_timeout_locked_sf, \
&&lb_count_wait_timeout_unlocked_sf, \
&&lb_count_wait_unlocked_f,

#define DEFINE_COUNTING_LABELS \
CountCase(aligned_label_Lt): erts_instr_count[0]++; goto lb_aligned_label_Lt; \
CountCase(allocate_tt): erts_instr_count[1]++; goto lb_allocate_tt; \
CountCase(allocate_heap_tIt): erts_instr_count[2]++; goto lb_allocate_heap_tIt; \
CountCase(apply_t): erts_instr_count[3]++; goto lb_apply_t; \
CountCase(apply_last_tt): erts_instr_count[4]++; goto lb_apply_last_tt; \
CountCase(badmatch_s): erts_instr_count[5]++; goto lb_badmatch_s; \
CountCase(badrecord_s): erts_instr_count[6]++; goto lb_badrecord_s; \
CountCase(bif_and_jssd): erts_instr_count[7]++; goto lb_bif_and_jssd; \
CountCase(bif_bit_size_jsd): erts_instr_count[8]++; goto lb_bif_bit_size_jsd; \
CountCase(bif_byte_size_jsd): erts_instr_count[9]++; goto lb_bif_byte_size_jsd; \
CountCase(bif_element_jssd): erts_instr_count[10]++; goto lb_bif_element_jssd; \
CountCase(bif_hd_sd): erts_instr_count[11]++; goto lb_bif_hd_sd; \
CountCase(bif_is_eq_exact_Ssd): erts_instr_count[12]++; goto lb_bif_is_eq_exact_Ssd; \
CountCase(bif_is_ge_ssd): erts_instr_count[13]++; goto lb_bif_is_ge_ssd; \
CountCase(bif_is_lt_ssd): erts_instr_count[14]++; goto lb_bif_is_lt_ssd; \
CountCase(bif_is_map_key_bjssd): erts_instr_count[15]++; goto lb_bif_is_map_key_bjssd; \
CountCase(bif_is_ne_exact_Ssd): erts_instr_count[16]++; goto lb_bif_is_ne_exact_Ssd; \
CountCase(bif_map_get_jssd): erts_instr_count[17]++; goto lb_bif_map_get_jssd; \
CountCase(bif_map_size_jsd): erts_instr_count[18]++; goto lb_bif_map_size_jsd; \
CountCase(bif_max_ssd): erts_instr_count[19]++; goto lb_bif_max_ssd; \
CountCase(bif_min_ssd): erts_instr_count[20]++; goto lb_bif_min_ssd; \
CountCase(bif_node_jSd): erts_instr_count[21]++; goto lb_bif_node_jSd; \
CountCase(bif_not_jSd): erts_instr_count[22]++; goto lb_bif_not_jSd; \
CountCase(bif_or_jssd): erts_instr_count[23]++; goto lb_bif_or_jssd; \
CountCase(bif_tl_sd): erts_instr_count[24]++; goto lb_bif_tl_sd; \
CountCase(bif_tuple_size_jSd): erts_instr_count[25]++; goto lb_bif_tuple_size_jSd; \
CountCase(bs_get_integer2_fStsttd): erts_instr_count[26]++; goto lb_bs_get_integer2_fStsttd; \
CountCase(bs_get_tail_Sdt): erts_instr_count[27]++; goto lb_bs_get_tail_Sdt; \
CountCase(bs_init_writable): erts_instr_count[28]++; goto lb_bs_init_writable; \
CountCase(bs_set_position_SS): erts_instr_count[29]++; goto lb_bs_set_position_SS; \
CountCase(bs_test_tail2_fSW): erts_instr_count[30]++; goto lb_bs_test_tail2_fSW; \
CountCase(bs_test_unit_fSt): erts_instr_count[31]++; goto lb_bs_test_unit_fSt; \
CountCase(build_stacktrace): erts_instr_count[32]++; goto lb_build_stacktrace; \
CountCase(call_bif_W): erts_instr_count[33]++; goto lb_call_bif_W; \
CountCase(call_bif_mfa_aaI): erts_instr_count[34]++; goto lb_call_bif_mfa_aaI; \
CountCase(call_error_handler): erts_instr_count[35]++; goto lb_call_error_handler; \
CountCase(call_light_bif_be): erts_instr_count[36]++; goto lb_call_light_bif_be; \
CountCase(call_nif_WWW): erts_instr_count[37]++; goto lb_call_nif_WWW; \
CountCase(case_end_s): erts_instr_count[38]++; goto lb_case_end_s; \
CountCase(catch_yH): erts_instr_count[39]++; goto lb_catch_yH; \
CountCase(catch_end_y): erts_instr_count[40]++; goto lb_catch_end_y; \
CountCase(continue_exit): erts_instr_count[41]++; goto lb_continue_exit; \
CountCase(deallocate_t): erts_instr_count[42]++; goto lb_deallocate_t; \
CountCase(empty_func_line): erts_instr_count[43]++; goto lb_empty_func_line; \
CountCase(executable_line_II): erts_instr_count[44]++; goto lb_executable_line_II; \
CountCase(fconv_sl): erts_instr_count[45]++; goto lb_fconv_sl; \
CountCase(fload_ql): erts_instr_count[46]++; goto lb_fload_ql; \
CountCase(fload_Sl): erts_instr_count[47]++; goto lb_fload_Sl; \
CountCase(fstore_ld): erts_instr_count[48]++; goto lb_fstore_ld; \
CountCase(func_line_I): erts_instr_count[49]++; goto lb_func_line_I; \
CountCase(get_hd_Sd): erts_instr_count[50]++; goto lb_get_hd_Sd; \
CountCase(get_list_Sdd): erts_instr_count[51]++; goto lb_get_list_Sdd; \
CountCase(get_tl_Sd): erts_instr_count[52]++; goto lb_get_tl_Sd; \
CountCase(get_tuple_element_swap_sPdd): erts_instr_count[53]++; goto lb_get_tuple_element_swap_sPdd; \
CountCase(get_two_tuple_elements_sPSS): erts_instr_count[54]++; goto lb_get_two_tuple_elements_sPSS; \
CountCase(i_apply): erts_instr_count[55]++; goto lb_i_apply; \
CountCase(i_apply_fun): erts_instr_count[56]++; goto lb_i_apply_fun; \
CountCase(i_apply_fun_last_t): erts_instr_count[57]++; goto lb_i_apply_fun_last_t; \
CountCase(i_apply_fun_only): erts_instr_count[58]++; goto lb_i_apply_fun_only; \
CountCase(i_apply_last_t): erts_instr_count[59]++; goto lb_i_apply_last_t; \
CountCase(i_apply_only): erts_instr_count[60]++; goto lb_i_apply_only; \
CountCase(i_band_jIssd): erts_instr_count[61]++; goto lb_i_band_jIssd; \
CountCase(i_bif1_sjbd): erts_instr_count[62]++; goto lb_i_bif1_sjbd; \
CountCase(i_bif2_ssjbd): erts_instr_count[63]++; goto lb_i_bif2_ssjbd; \
CountCase(i_bif3_sssjbd): erts_instr_count[64]++; goto lb_i_bif3_sssjbd; \
CountCase(i_bnot_jIsd): erts_instr_count[65]++; goto lb_i_bnot_jIsd; \
CountCase(i_bor_jIssd): erts_instr_count[66]++; goto lb_i_bor_jIssd; \
CountCase(i_breakpoint_trampoline): erts_instr_count[67]++; goto lb_i_breakpoint_trampoline; \
CountCase(i_bs_create_bin_jItd): erts_instr_count[68]++; goto lb_i_bs_create_bin_jItd; \
CountCase(i_bs_get_bin_and_tail_SftStdd): erts_instr_count[69]++; goto lb_i_bs_get_bin_and_tail_SftStdd; \
CountCase(i_bs_get_binary2_Sftstd): erts_instr_count[70]++; goto lb_i_bs_get_binary2_Sftstd; \
CountCase(i_bs_get_binary_all2_Sfttd): erts_instr_count[71]++; goto lb_i_bs_get_binary_all2_Sfttd; \
CountCase(i_bs_get_float2_Sftstd): erts_instr_count[72]++; goto lb_i_bs_get_float2_Sftstd; \
CountCase(i_bs_get_position_SS): erts_instr_count[73]++; goto lb_i_bs_get_position_SS; \
CountCase(i_bs_get_utf16_Sftd): erts_instr_count[74]++; goto lb_i_bs_get_utf16_Sftd; \
CountCase(i_bs_get_utf8_Sfd): erts_instr_count[75]++; goto lb_i_bs_get_utf8_Sfd; \
CountCase(i_bs_match_fS): erts_instr_count[76]++; goto lb_i_bs_match_fS; \
CountCase(i_bs_match_string_SfWM): erts_instr_count[77]++; goto lb_i_bs_match_string_SfWM; \
CountCase(i_bs_match_test_heap_fSIt): erts_instr_count[78]++; goto lb_i_bs_match_test_heap_fSIt; \
CountCase(i_bs_skip_bits2_Ssft): erts_instr_count[79]++; goto lb_i_bs_skip_bits2_Ssft; \
CountCase(i_bs_skip_utf16_Sft): erts_instr_count[80]++; goto lb_i_bs_skip_utf16_Sft; \
CountCase(i_bs_skip_utf8_Sf): erts_instr_count[81]++; goto lb_i_bs_skip_utf8_Sf; \
CountCase(i_bs_start_match3_Stjd): erts_instr_count[82]++; goto lb_i_bs_start_match3_Stjd; \
CountCase(i_bs_validate_unicode_retract_jsS): erts_instr_count[83]++; goto lb_i_bs_validate_unicode_retract_jsS; \
CountCase(i_bsl_jIssd): erts_instr_count[84]++; goto lb_i_bsl_jIssd; \
CountCase(i_bsr_jIssd): erts_instr_count[85]++; goto lb_i_bsr_jIssd; \
CountCase(i_bxor_jIssd): erts_instr_count[86]++; goto lb_i_bxor_jIssd; \
CountCase(i_call_f): erts_instr_count[87]++; goto lb_i_call_f; \
CountCase(i_call_ext_e): erts_instr_count[88]++; goto lb_i_call_ext_e; \
CountCase(i_call_ext_last_et): erts_instr_count[89]++; goto lb_i_call_ext_last_et; \
CountCase(i_call_ext_only_e): erts_instr_count[90]++; goto lb_i_call_ext_only_e; \
CountCase(i_call_fun_t): erts_instr_count[91]++; goto lb_i_call_fun_t; \
CountCase(i_call_fun2_atS): erts_instr_count[92]++; goto lb_i_call_fun2_atS; \
CountCase(i_call_fun2_FtS): erts_instr_count[93]++; goto lb_i_call_fun2_FtS; \
CountCase(i_call_fun2_last_atSt): erts_instr_count[94]++; goto lb_i_call_fun2_last_atSt; \
CountCase(i_call_fun2_last_FtSt): erts_instr_count[95]++; goto lb_i_call_fun2_last_FtSt; \
CountCase(i_call_fun_last_tt): erts_instr_count[96]++; goto lb_i_call_fun_last_tt; \
CountCase(i_call_last_ft): erts_instr_count[97]++; goto lb_i_call_last_ft; \
CountCase(i_call_on_load_function): erts_instr_count[98]++; goto lb_i_call_on_load_function; \
CountCase(i_call_only_f): erts_instr_count[99]++; goto lb_i_call_only_f; \
CountCase(i_call_trace_return): erts_instr_count[100]++; goto lb_i_call_trace_return; \
CountCase(i_debug_breakpoint): erts_instr_count[101]++; goto lb_i_debug_breakpoint; \
CountCase(i_debug_line_IIt): erts_instr_count[102]++; goto lb_i_debug_line_IIt; \
CountCase(i_div_rem_jIssdd): erts_instr_count[103]++; goto lb_i_div_rem_jIssdd; \
CountCase(i_fadd_lll): erts_instr_count[104]++; goto lb_i_fadd_lll; \
CountCase(i_fdiv_lll): erts_instr_count[105]++; goto lb_i_fdiv_lll; \
CountCase(i_flush_stubs): erts_instr_count[106]++; goto lb_i_flush_stubs; \
CountCase(i_fmul_lll): erts_instr_count[107]++; goto lb_i_fmul_lll; \
CountCase(i_fnegate_ll): erts_instr_count[108]++; goto lb_i_fnegate_ll; \
CountCase(i_fsub_lll): erts_instr_count[109]++; goto lb_i_fsub_lll; \
CountCase(i_func_info_IaaI): erts_instr_count[110]++; goto lb_i_func_info_IaaI; \
CountCase(i_func_label_L): erts_instr_count[111]++; goto lb_i_func_label_L; \
CountCase(i_generic_breakpoint): erts_instr_count[112]++; goto lb_i_generic_breakpoint; \
CountCase(i_get_sd): erts_instr_count[113]++; goto lb_i_get_sd; \
CountCase(i_get_hash_cWd): erts_instr_count[114]++; goto lb_i_get_hash_cWd; \
CountCase(i_get_map_element_fSSS): erts_instr_count[115]++; goto lb_i_get_map_element_fSSS; \
CountCase(i_get_map_element_hash_fScWS): erts_instr_count[116]++; goto lb_i_get_map_element_hash_fScWS; \
CountCase(i_get_map_elements_fsI): erts_instr_count[117]++; goto lb_i_get_map_elements_fsI; \
CountCase(i_get_tuple_element_sPS): erts_instr_count[118]++; goto lb_i_get_tuple_element_sPS; \
CountCase(i_hibernate): erts_instr_count[119]++; goto lb_i_hibernate; \
CountCase(i_int_div_jIssd): erts_instr_count[120]++; goto lb_i_int_div_jIssd; \
CountCase(i_is_tagged_tuple_fsAa): erts_instr_count[121]++; goto lb_i_is_tagged_tuple_fsAa; \
CountCase(i_is_tagged_tuple_ff_ffsAa): erts_instr_count[122]++; goto lb_i_is_tagged_tuple_ff_ffsAa; \
CountCase(i_is_tuple_fs): erts_instr_count[123]++; goto lb_i_is_tuple_fs; \
CountCase(i_is_tuple_of_arity_fsA): erts_instr_count[124]++; goto lb_i_is_tuple_of_arity_fsA; \
CountCase(i_is_tuple_of_arity_ff_ffsA): erts_instr_count[125]++; goto lb_i_is_tuple_of_arity_ff_ffsA; \
CountCase(i_jump_on_val_sfWI): erts_instr_count[126]++; goto lb_i_jump_on_val_sfWI; \
CountCase(i_jump_on_val_snWI): erts_instr_count[127]++; goto lb_i_jump_on_val_snWI; \
CountCase(i_lambda_error_t): erts_instr_count[128]++; goto lb_i_lambda_error_t; \
CountCase(i_lambda_trampoline_FfWW): erts_instr_count[129]++; goto lb_i_lambda_trampoline_FfWW; \
CountCase(i_length_jtd): erts_instr_count[130]++; goto lb_i_length_jtd; \
CountCase(i_length_setup_jts): erts_instr_count[131]++; goto lb_i_length_setup_jts; \
CountCase(i_line_breakpoint_trampoline): erts_instr_count[132]++; goto lb_i_line_breakpoint_trampoline; \
CountCase(i_load_nif): erts_instr_count[133]++; goto lb_i_load_nif; \
CountCase(i_loop_rec_f): erts_instr_count[134]++; goto lb_i_loop_rec_f; \
CountCase(i_m_div_jIssd): erts_instr_count[135]++; goto lb_i_m_div_jIssd; \
CountCase(i_make_fun3_FStt): erts_instr_count[136]++; goto lb_i_make_fun3_FStt; \
CountCase(i_minus_jIssd): erts_instr_count[137]++; goto lb_i_minus_jIssd; \
CountCase(i_move_sd): erts_instr_count[138]++; goto lb_i_move_sd; \
CountCase(i_mul_add_jssssd): erts_instr_count[139]++; goto lb_i_mul_add_jssssd; \
CountCase(i_new_small_map_lit_dtqI): erts_instr_count[140]++; goto lb_i_new_small_map_lit_dtqI; \
CountCase(i_nif_padding): erts_instr_count[141]++; goto lb_i_nif_padding; \
CountCase(i_perf_counter): erts_instr_count[142]++; goto lb_i_perf_counter; \
CountCase(i_plus_jIssd): erts_instr_count[143]++; goto lb_i_plus_jIssd; \
CountCase(i_rem_jIssd): erts_instr_count[144]++; goto lb_i_rem_jIssd; \
CountCase(i_rem_div_jIssdd): erts_instr_count[145]++; goto lb_i_rem_div_jIssdd; \
CountCase(i_return_to_trace): erts_instr_count[146]++; goto lb_i_return_to_trace; \
CountCase(i_select_tuple_arity_SfI): erts_instr_count[147]++; goto lb_i_select_tuple_arity_SfI; \
CountCase(i_select_val_bins_sfI): erts_instr_count[148]++; goto lb_i_select_val_bins_sfI; \
CountCase(i_select_val_bins_snI): erts_instr_count[149]++; goto lb_i_select_val_bins_snI; \
CountCase(i_select_val_lins_sfI): erts_instr_count[150]++; goto lb_i_select_val_lins_sfI; \
CountCase(i_select_val_lins_snI): erts_instr_count[151]++; goto lb_i_select_val_lins_snI; \
CountCase(i_test_arity_fsA): erts_instr_count[152]++; goto lb_i_test_arity_fsA; \
CountCase(i_test_yield): erts_instr_count[153]++; goto lb_i_test_yield; \
CountCase(i_unary_minus_jIsd): erts_instr_count[154]++; goto lb_i_unary_minus_jIsd; \
CountCase(i_validate_t): erts_instr_count[155]++; goto lb_i_validate_t; \
CountCase(i_yield): erts_instr_count[156]++; goto lb_i_yield; \
CountCase(if_end): erts_instr_count[157]++; goto lb_if_end; \
CountCase(init_yregs_I): erts_instr_count[158]++; goto lb_init_yregs_I; \
CountCase(int_code_end): erts_instr_count[159]++; goto lb_int_code_end; \
CountCase(is_atom_fs): erts_instr_count[160]++; goto lb_is_atom_fs; \
CountCase(is_binary_fs): erts_instr_count[161]++; goto lb_is_binary_fs; \
CountCase(is_bitstring_fs): erts_instr_count[162]++; goto lb_is_bitstring_fs; \
CountCase(is_boolean_fs): erts_instr_count[163]++; goto lb_is_boolean_fs; \
CountCase(is_eq_fss): erts_instr_count[164]++; goto lb_is_eq_fss; \
CountCase(is_eq_exact_fss): erts_instr_count[165]++; goto lb_is_eq_exact_fss; \
CountCase(is_float_fs): erts_instr_count[166]++; goto lb_is_float_fs; \
CountCase(is_function_fS): erts_instr_count[167]++; goto lb_is_function_fS; \
CountCase(is_function2_fss): erts_instr_count[168]++; goto lb_is_function2_fss; \
CountCase(is_ge_fss): erts_instr_count[169]++; goto lb_is_ge_fss; \
CountCase(is_ge_ge_ffScc): erts_instr_count[170]++; goto lb_is_ge_ge_ffScc; \
CountCase(is_ge_lt_ffScc): erts_instr_count[171]++; goto lb_is_ge_lt_ffScc; \
CountCase(is_in_range_ffScc): erts_instr_count[172]++; goto lb_is_in_range_ffScc; \
CountCase(is_int_ge_fSc): erts_instr_count[173]++; goto lb_is_int_ge_fSc; \
CountCase(is_int_in_range_fScc): erts_instr_count[174]++; goto lb_is_int_in_range_fScc; \
CountCase(is_integer_fs): erts_instr_count[175]++; goto lb_is_integer_fs; \
CountCase(is_list_fs): erts_instr_count[176]++; goto lb_is_list_fs; \
CountCase(is_lt_fss): erts_instr_count[177]++; goto lb_is_lt_fss; \
CountCase(is_map_fs): erts_instr_count[178]++; goto lb_is_map_fs; \
CountCase(is_ne_fss): erts_instr_count[179]++; goto lb_is_ne_fss; \
CountCase(is_ne_exact_fss): erts_instr_count[180]++; goto lb_is_ne_exact_fss; \
CountCase(is_nil_fS): erts_instr_count[181]++; goto lb_is_nil_fS; \
CountCase(is_nonempty_list_fS): erts_instr_count[182]++; goto lb_is_nonempty_list_fS; \
CountCase(is_number_fs): erts_instr_count[183]++; goto lb_is_number_fs; \
CountCase(is_pid_fs): erts_instr_count[184]++; goto lb_is_pid_fs; \
CountCase(is_port_fs): erts_instr_count[185]++; goto lb_is_port_fs; \
CountCase(is_reference_fs): erts_instr_count[186]++; goto lb_is_reference_fs; \
CountCase(jump_f): erts_instr_count[187]++; goto lb_jump_f; \
CountCase(label_L): erts_instr_count[188]++; goto lb_label_L; \
CountCase(line_I): erts_instr_count[189]++; goto lb_line_I; \
CountCase(load_tuple_ptr_s): erts_instr_count[190]++; goto lb_load_tuple_ptr_s; \
CountCase(load_two_xregs_dxdx): erts_instr_count[191]++; goto lb_load_two_xregs_dxdx; \
CountCase(loop_rec_end_f): erts_instr_count[192]++; goto lb_loop_rec_end_f; \
CountCase(mark_unreachable): erts_instr_count[193]++; goto lb_mark_unreachable; \
CountCase(move_call_ext_last_ydet): erts_instr_count[194]++; goto lb_move_call_ext_last_ydet; \
CountCase(move_call_last_ydft): erts_instr_count[195]++; goto lb_move_call_last_ydft; \
CountCase(move_deallocate_return): erts_instr_count[196]++; goto lb_move_deallocate_return; \
CountCase(move_trim_sdt): erts_instr_count[197]++; goto lb_move_trim_sdt; \
CountCase(move_two_trim_ydydt): erts_instr_count[198]++; goto lb_move_two_trim_ydydt; \
CountCase(new_map_dtI): erts_instr_count[199]++; goto lb_new_map_dtI; \
CountCase(nif_start): erts_instr_count[200]++; goto lb_nif_start; \
CountCase(node_d): erts_instr_count[201]++; goto lb_node_d; \
CountCase(nofail_bif1_sbd): erts_instr_count[202]++; goto lb_nofail_bif1_sbd; \
CountCase(nofail_bif2_ssbd): erts_instr_count[203]++; goto lb_nofail_bif2_ssbd; \
CountCase(normal_exit): erts_instr_count[204]++; goto lb_normal_exit; \
CountCase(on_load): erts_instr_count[205]++; goto lb_on_load; \
CountCase(put_list_ssd): erts_instr_count[206]++; goto lb_put_list_ssd; \
CountCase(put_list2_sssd): erts_instr_count[207]++; goto lb_put_list2_sssd; \
CountCase(put_list_deallocate_ssdt): erts_instr_count[208]++; goto lb_put_list_deallocate_ssdt; \
CountCase(put_tuple2_SA): erts_instr_count[209]++; goto lb_put_tuple2_SA; \
CountCase(raise_ss): erts_instr_count[210]++; goto lb_raise_ss; \
CountCase(raw_raise): erts_instr_count[211]++; goto lb_raw_raise; \
CountCase(recv_marker_bind_SS): erts_instr_count[212]++; goto lb_recv_marker_bind_SS; \
CountCase(recv_marker_clear_S): erts_instr_count[213]++; goto lb_recv_marker_clear_S; \
CountCase(recv_marker_reserve_S): erts_instr_count[214]++; goto lb_recv_marker_reserve_S; \
CountCase(recv_marker_use_S): erts_instr_count[215]++; goto lb_recv_marker_use_S; \
CountCase(remove_message): erts_instr_count[216]++; goto lb_remove_message; \
CountCase(return): erts_instr_count[217]++; goto lb_return; \
CountCase(return_trace): erts_instr_count[218]++; goto lb_return_trace; \
CountCase(self_d): erts_instr_count[219]++; goto lb_self_d; \
CountCase(send): erts_instr_count[220]++; goto lb_send; \
CountCase(set_tuple_element_sSP): erts_instr_count[221]++; goto lb_set_tuple_element_sSP; \
CountCase(store_two_values_sdsd): erts_instr_count[222]++; goto lb_store_two_values_sdsd; \
CountCase(swap_dd): erts_instr_count[223]++; goto lb_swap_dd; \
CountCase(swap2_ddd): erts_instr_count[224]++; goto lb_swap2_ddd; \
CountCase(swap3_dddd): erts_instr_count[225]++; goto lb_swap3_dddd; \
CountCase(swap4_ddddd): erts_instr_count[226]++; goto lb_swap4_ddddd; \
CountCase(system_limit_body): erts_instr_count[227]++; goto lb_system_limit_body; \
CountCase(test_heap_It): erts_instr_count[228]++; goto lb_test_heap_It; \
CountCase(timeout): erts_instr_count[229]++; goto lb_timeout; \
CountCase(timeout_locked): erts_instr_count[230]++; goto lb_timeout_locked; \
CountCase(trace_jump_W): erts_instr_count[231]++; goto lb_trace_jump_W; \
CountCase(trim_tt): erts_instr_count[232]++; goto lb_trim_tt; \
CountCase(try_case_y): erts_instr_count[233]++; goto lb_try_case_y; \
CountCase(try_case_end_s): erts_instr_count[234]++; goto lb_try_case_end_s; \
CountCase(try_end_y): erts_instr_count[235]++; goto lb_try_end_y; \
CountCase(try_end_deallocate_t): erts_instr_count[236]++; goto lb_try_end_deallocate_t; \
CountCase(try_end_move_deallocate_sdt): erts_instr_count[237]++; goto lb_try_end_move_deallocate_sdt; \
CountCase(update_map_assoc_sdtI): erts_instr_count[238]++; goto lb_update_map_assoc_sdtI; \
CountCase(update_map_exact_sjdtI): erts_instr_count[239]++; goto lb_update_map_exact_sjdtI; \
CountCase(update_record_aIsdI): erts_instr_count[240]++; goto lb_update_record_aIsdI; \
CountCase(update_record_in_place_IsdI): erts_instr_count[241]++; goto lb_update_record_in_place_IsdI; \
CountCase(wait_locked_f): erts_instr_count[242]++; goto lb_wait_locked_f; \
CountCase(wait_timeout_locked_sf): erts_instr_count[243]++; goto lb_wait_timeout_locked_sf; \
CountCase(wait_timeout_unlocked_sf): erts_instr_count[244]++; goto lb_wait_timeout_unlocked_sf; \
CountCase(wait_unlocked_f): erts_instr_count[245]++; goto lb_wait_unlocked_f;

#define genop_label_1 1
#define genop_func_info_3 2
#define genop_int_code_end_0 3
#define genop_call_2 4
#define genop_call_last_3 5
#define genop_call_only_2 6
#define genop_call_ext_2 7
#define genop_call_ext_last_3 8
#define genop_bif0_2 9
#define genop_bif1_4 10
#define genop_bif2_5 11
#define genop_allocate_2 12
#define genop_allocate_heap_3 13
#define genop_allocate_zero_2 14
#define genop_allocate_heap_zero_3 15
#define genop_test_heap_2 16
#define genop_init_1 17
#define genop_deallocate_1 18
#define genop_return_0 19
#define genop_send_0 20
#define genop_remove_message_0 21
#define genop_timeout_0 22
#define genop_loop_rec_2 23
#define genop_loop_rec_end_1 24
#define genop_wait_1 25
#define genop_wait_timeout_2 26
#define genop_m_plus_4 27
#define genop_m_minus_4 28
#define genop_m_times_4 29
#define genop_m_div_4 30
#define genop_int_div_4 31
#define genop_int_rem_4 32
#define genop_int_band_4 33
#define genop_int_bor_4 34
#define genop_int_bxor_4 35
#define genop_int_bsl_4 36
#define genop_int_bsr_4 37
#define genop_int_bnot_3 38
#define genop_is_lt_3 39
#define genop_is_ge_3 40
#define genop_is_eq_3 41
#define genop_is_ne_3 42
#define genop_is_eq_exact_3 43
#define genop_is_ne_exact_3 44
#define genop_is_integer_2 45
#define genop_is_float_2 46
#define genop_is_number_2 47
#define genop_is_atom_2 48
#define genop_is_pid_2 49
#define genop_is_reference_2 50
#define genop_is_port_2 51
#define genop_is_nil_2 52
#define genop_is_binary_2 53
#define genop_is_constant_2 54
#define genop_is_list_2 55
#define genop_is_nonempty_list_2 56
#define genop_is_tuple_2 57
#define genop_test_arity_3 58
#define genop_select_val_3 59
#define genop_select_tuple_arity_3 60
#define genop_jump_1 61
#define genop_catch_2 62
#define genop_catch_end_1 63
#define genop_move_2 64
#define genop_get_list_3 65
#define genop_get_tuple_element_3 66
#define genop_set_tuple_element_3 67
#define genop_put_string_3 68
#define genop_put_list_3 69
#define genop_put_tuple_2 70
#define genop_put_1 71
#define genop_badmatch_1 72
#define genop_if_end_0 73
#define genop_case_end_1 74
#define genop_call_fun_1 75
#define genop_make_fun_3 76
#define genop_is_function_2 77
#define genop_call_ext_only_2 78
#define genop_bs_start_match_2 79
#define genop_bs_get_integer_5 80
#define genop_bs_get_float_5 81
#define genop_bs_get_binary_5 82
#define genop_bs_skip_bits_4 83
#define genop_bs_test_tail_2 84
#define genop_bs_save_1 85
#define genop_bs_restore_1 86
#define genop_bs_init_2 87
#define genop_bs_final_2 88
#define genop_bs_put_integer_5 89
#define genop_bs_put_binary_5 90
#define genop_bs_put_float_5 91
#define genop_bs_put_string_2 92
#define genop_bs_need_buf_1 93
#define genop_fclearerror_0 94
#define genop_fcheckerror_1 95
#define genop_fmove_2 96
#define genop_fconv_2 97
#define genop_fadd_4 98
#define genop_fsub_4 99
#define genop_fmul_4 100
#define genop_fdiv_4 101
#define genop_fnegate_3 102
#define genop_make_fun2_1 103
#define genop_try_2 104
#define genop_try_end_1 105
#define genop_try_case_1 106
#define genop_try_case_end_1 107
#define genop_raise_2 108
#define genop_bs_init2_6 109
#define genop_bs_bits_to_bytes_3 110
#define genop_bs_add_5 111
#define genop_apply_1 112
#define genop_apply_last_2 113
#define genop_is_boolean_2 114
#define genop_is_function2_3 115
#define genop_bs_start_match2_5 116
#define genop_bs_get_integer2_7 117
#define genop_bs_get_float2_7 118
#define genop_bs_get_binary2_7 119
#define genop_bs_skip_bits2_5 120
#define genop_bs_test_tail2_3 121
#define genop_bs_save2_2 122
#define genop_bs_restore2_2 123
#define genop_gc_bif1_5 124
#define genop_gc_bif2_6 125
#define genop_bs_final2_2 126
#define genop_bs_bits_to_bytes2_2 127
#define genop_put_literal_2 128
#define genop_is_bitstr_2 129
#define genop_bs_context_to_binary_1 130
#define genop_bs_test_unit_3 131
#define genop_bs_match_string_4 132
#define genop_bs_init_writable_0 133
#define genop_bs_append_8 134
#define genop_bs_private_append_6 135
#define genop_trim_2 136
#define genop_bs_init_bits_6 137
#define genop_bs_get_utf8_5 138
#define genop_bs_skip_utf8_4 139
#define genop_bs_get_utf16_5 140
#define genop_bs_skip_utf16_4 141
#define genop_bs_get_utf32_5 142
#define genop_bs_skip_utf32_4 143
#define genop_bs_utf8_size_3 144
#define genop_bs_put_utf8_3 145
#define genop_bs_utf16_size_3 146
#define genop_bs_put_utf16_3 147
#define genop_bs_put_utf32_3 148
#define genop_on_load_0 149
#define genop_recv_mark_1 150
#define genop_recv_set_1 151
#define genop_gc_bif3_7 152
#define genop_line_1 153
#define genop_put_map_assoc_5 154
#define genop_put_map_exact_5 155
#define genop_is_map_2 156
#define genop_has_map_fields_3 157
#define genop_get_map_elements_3 158
#define genop_is_tagged_tuple_4 159
#define genop_build_stacktrace_0 160
#define genop_raw_raise_0 161
#define genop_get_hd_2 162
#define genop_get_tl_2 163
#define genop_put_tuple2_2 164
#define genop_bs_get_tail_3 165
#define genop_bs_start_match3_4 166
#define genop_bs_get_position_3 167
#define genop_bs_set_position_2 168
#define genop_swap_2 169
#define genop_bs_start_match4_4 170
#define genop_make_fun3_3 171
#define genop_init_yregs_1 172
#define genop_recv_marker_bind_2 173
#define genop_recv_marker_clear_1 174
#define genop_recv_marker_reserve_1 175
#define genop_recv_marker_use_1 176
#define genop_bs_create_bin_6 177
#define genop_call_fun2_3 178
#define genop_nif_start_0 179
#define genop_badrecord_1 180
#define genop_update_record_5 181
#define genop_bs_match_3 182
#define genop_executable_line_2 183
#define genop_debug_line_4 184
#define genop_aligned_label_2 185
#define genop_i_func_label_1 186
#define genop_i_func_info_4 187
#define genop_i_generic_breakpoint_0 188
#define genop_i_debug_breakpoint_0 189
#define genop_i_call_trace_return_0 190
#define genop_i_return_to_trace_0 191
#define genop_trace_jump_1 192
#define genop_i_yield_0 193
#define genop_empty_func_line_0 194
#define genop_func_line_1 195
#define genop_i_debug_line_3 196
#define genop_i_line_breakpoint_trampoline_0 197
#define genop_i_select_val_bins_3 198
#define genop_i_select_val_lins_3 199
#define genop_i_select_tuple_arity_3 200
#define genop_i_jump_on_val_4 201
#define genop_try_end_deallocate_1 202
#define genop_try_end_move_deallocate_3 203
#define genop_move_deallocate_return_0 204
#define genop_current_tuple_1 205
#define genop_current_tuple_2 206
#define genop_i_is_tuple_of_arity_3 207
#define genop_i_is_tuple_of_arity_ff_4 208
#define genop_i_test_arity_3 209
#define genop_i_is_tagged_tuple_4 210
#define genop_i_is_tagged_tuple_ff_5 211
#define genop_i_is_tuple_2 212
#define genop_load_tuple_ptr_1 213
#define genop_i_get_tuple_element_3 214
#define genop_get_two_tuple_elements_4 215
#define genop_get_tuple_element_swap_4 216
#define genop_delete_me_0 217
#define genop_system_limit_1 218
#define genop_system_limit_body_0 219
#define genop_move_two_trim_5 220
#define genop_move_trim_3 221
#define genop_i_move_2 222
#define genop_store_two_values_4 223
#define genop_load_two_xregs_4 224
#define genop_swap2_3 225
#define genop_swap3_4 226
#define genop_swap4_5 227
#define genop_timeout_locked_0 228
#define genop_i_loop_rec_1 229
#define genop_wait_locked_1 230
#define genop_wait_unlocked_1 231
#define genop_wait_timeout_unlocked_2 232
#define genop_wait_timeout_locked_2 233
#define genop_is_int_in_range_4 234
#define genop_is_int_ge_3 235
#define genop_is_in_range_5 236
#define genop_is_ge_lt_5 237
#define genop_is_ge_ge_5 238
#define genop_put_list_deallocate_4 239
#define genop_put_list2_4 240
#define genop_normal_exit_0 241
#define genop_continue_exit_0 242
#define genop_call_bif_1 243
#define genop_call_bif_mfa_3 244
#define genop_call_nif_3 245
#define genop_call_error_handler_0 246
#define genop_return_trace_0 247
#define genop_is_bitstring_2 248
#define genop_call_light_bif_1 249
#define genop_i_load_nif_0 250
#define genop_i_call_on_load_function_0 251
#define genop_mark_unreachable_0 252
#define genop_i_validate_1 253
#define genop_i_apply_0 254
#define genop_i_apply_last_1 255
#define genop_i_apply_only_0 256
#define genop_i_apply_fun_0 257
#define genop_i_apply_fun_last_1 258
#define genop_i_apply_fun_only_0 259
#define genop_call_light_bif_2 260
#define genop_i_hibernate_0 261
#define genop_i_perf_counter_0 262
#define genop_bif_hd_2 263
#define genop_bif_tl_2 264
#define genop_bif_element_4 265
#define genop_bif_and_4 266
#define genop_bif_or_4 267
#define genop_bif_not_3 268
#define genop_bif_node_3 269
#define genop_bif_bit_size_3 270
#define genop_bif_byte_size_3 271
#define genop_bif_tuple_size_3 272
#define genop_bif_map_get_4 273
#define genop_bif_is_map_key_5 274
#define genop_bif_max_3 275
#define genop_bif_min_3 276
#define genop_i_get_hash_3 277
#define genop_i_get_2 278
#define genop_self_1 279
#define genop_node_1 280
#define genop_nofail_bif1_3 281
#define genop_nofail_bif2_4 282
#define genop_i_bif1_4 283
#define genop_i_bif2_5 284
#define genop_i_bif3_6 285
#define genop_bif_is_eq_exact_3 286
#define genop_bif_is_ne_exact_3 287
#define genop_bif_is_ge_3 288
#define genop_bif_is_lt_3 289
#define genop_move_call_last_4 290
#define genop_move_call_ext_last_4 291
#define genop_i_call_1 292
#define genop_i_call_last_2 293
#define genop_i_call_only_1 294
#define genop_i_call_ext_1 295
#define genop_i_call_ext_last_2 296
#define genop_i_call_ext_only_1 297
#define genop_i_call_fun_1 298
#define genop_i_call_fun_last_2 299
#define genop_i_call_fun2_3 300
#define genop_i_call_fun2_last_4 301
#define genop_i_make_fun3_4 302
#define genop_i_lambda_error_1 303
#define genop_int_func_start_5 304
#define genop_int_func_end_2 305
#define genop_func_prologue_2 306
#define genop_i_test_yield_0 307
#define genop_i_nif_padding_0 308
#define genop_i_flush_stubs_0 309
#define genop_i_breakpoint_trampoline_0 310
#define genop_i_bs_match_2 311
#define genop_i_bs_match_test_heap_4 312
#define genop_bad_bs_match_1 313
#define genop_i_bs_match_string_4 314
#define genop_i_bs_get_bin_and_tail_7 315
#define genop_i_bs_get_binary2_6 316
#define genop_i_bs_get_binary_all2_5 317
#define genop_i_bs_get_float2_6 318
#define genop_i_bs_skip_bits2_4 319
#define genop_i_bs_start_match3_4 320
#define genop_i_bs_get_position_2 321
#define genop_i_bs_get_utf8_3 322
#define genop_i_bs_skip_utf8_2 323
#define genop_i_bs_get_utf16_4 324
#define genop_i_bs_skip_utf16_3 325
#define genop_i_bs_validate_unicode_retract_3 326
#define genop_i_bs_create_bin_4 327
#define genop_fstore_2 328
#define genop_fload_2 329
#define genop_i_fadd_3 330
#define genop_i_fsub_3 331
#define genop_i_fmul_3 332
#define genop_i_fdiv_3 333
#define genop_i_fnegate_2 334
#define genop_i_put_map_assoc_4 335
#define genop_sorted_put_map_assoc_4 336
#define genop_sorted_put_map_exact_5 337
#define genop_new_map_3 338
#define genop_i_new_small_map_lit_4 339
#define genop_update_map_assoc_4 340
#define genop_update_map_exact_5 341
#define genop_i_get_map_elements_3 342
#define genop_i_get_map_element_hash_5 343
#define genop_i_get_map_element_4 344
#define genop_i_mul_add_6 345
#define genop_i_plus_5 346
#define genop_i_unary_minus_4 347
#define genop_i_minus_5 348
#define genop_i_m_div_5 349
#define genop_i_rem_div_6 350
#define genop_i_div_rem_6 351
#define genop_i_int_div_5 352
#define genop_i_rem_5 353
#define genop_i_band_5 354
#define genop_i_bor_5 355
#define genop_i_bxor_5 356
#define genop_i_bnot_4 357
#define genop_i_bsr_5 358
#define genop_i_bsl_5 359
#define genop_i_length_setup_3 360
#define genop_i_length_3 361
#define genop_bif_map_size_3 362
#define genop_unsupported_guard_bif_3 363
#define genop_i_lambda_trampoline_4 364
#define genop_update_record_in_place_4 365
#endif
